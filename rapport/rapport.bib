@Misc{arduino,
  author =    {Arduino Team},
  title =     {Arduino Homepage},
  howpublished = {\url{http://www.arduino.cc/}}
}

@INPROCEEDINGS{frob99,
    author = {John Peterson and Gregory D. Hager and Paul Hudak},
    title = {A language for declarative robotic programming},
    booktitle = {In International Conference on Robotics and Automation},
    year = {1999},
    pages = {1144--1151}
}

@misc{arrowsrobotsfrp02,
	abstract = {Functional reactive programming, or FRP, is a
                  paradigm for programming hybrid systems -- i.e.,
                  systems containing a combination of both continuous
                  and discrete components -- in a high-level,
                  declarative way. The key ideas in FRP are its
                  notions of continuous, time-varying values, and
                  time-ordered sequences of discrete events.},
	author = {Hudak, P.  and Courtney, A.  and Nilsson, H.  and Peterson, J. },
	citeulike-article-id = {1712418},
	keywords = {functional, haskell, language},
	posted-at = {2007-10-17 21:54:40},
	priority = {2},
	title = {Arrows, robots, and functional reactive programming},
	url = {http://citeseer.ist.psu.edu/hudak02arrows.html},
	year = {2002}
}


@article{flask08,
	abstract = {Severely resource-constrained devices present a confounding
                  challenge to the functional programmer: we are used to having
                  powerful abstraction facilities at our fingertips, but how can
                  we make use of these tools on a device with an 8- or 16-bit
                  CPU and at most tens of kilobytes of RAM? Motivated by this
                  challenge, we have developed Flask, a domain specific language
                  embedded in Haskell that brings the power of functional
                  programming to sensor networks, collections of highly
                  resource-constrained devices. Flask consists of a staging
                  mechanism that cleanly separates node-level code from the
                  meta-language used to generate node-level code fragments;
                  syntactic support for embedding standard sensor network code;
                  a restricted subset of Haskell that runs on sensor networks
                  and constrains program space and time consumption; a
                  higher-level "data stream" combinator library for quickly
                  constructing sensor network programs; and an extensible
                  runtime that provides commonly-used services.},
	address = {New York, NY, USA},
	author = {Mainland, Geoffrey   and Morrisett, Greg   and Welsh, Matt  },
	citeulike-article-id = {3481684},
	doi = {http://dx.doi.org/10.1145/1411203.1411251},
	issn = {0362-1340},
	journal = {SIGPLAN Not.},
	keywords = {domainspecific, embedded, embeddedlanguage, functionalprogramming, haskell},
	number = {9},
	pages = {335--346},
	posted-at = {2008-12-25 12:55:51},
	priority = {0},
	publisher = {ACM},
	title = {Flask: staged functional programming for sensor networks},
	url = {http://dx.doi.org/10.1145/1411203.1411251},
	volume = {43},
	year = {2008}
}

@inproceedings{quasiquote07,
	address = {New York, NY, USA},
	author = {Mainland, Geoffrey  },
	booktitle = {Haskell '07: Proceedings of the ACM SIGPLAN workshop on Haskell workshop},
	citeulike-article-id = {1880302},
	doi = {10.1145/1291201.1291211},
	isbn = {9781595936745},
	keywords = {haskell},
	pages = {73--82},
	posted-at = {2007-11-11 13:34:29},
	priority = {0},
	publisher = {ACM},
	title = {Why it's nice to be quoted: quasiquoting for haskell},
	url = {http://dx.doi.org/10.1145/1291201.1291211},
	year = {2007}
}


@INPROCEEDINGS{lustre91,
    author = {N. Halbwachs and P. Caspi and P. Raymond and D. Pilaud},
    title = {The synchronous dataflow programming language LUSTRE},
    booktitle = {Proceedings of the IEEE},
    year = {1991},
    pages = {1305--1320}
}

@manual{usb20,
  edition = {2.0},
  month = {apr},
  organization = {Compaq, Hewlett-Packard, Intel, Lucent, Microsoft, NEC, and Philips},
  title = {Universal Serial Bus Revision 2.0 specification},
  url = {http://www.usb.org/developers/docs/},
  year = {2000},
  keywords = {2.0 bus serial universal usb usb2},
  bibsonomyIntrahash = {2672ac6f7d407af7035406443442e00e5},
}

@manual{iWRAP220UG,
  edition = {3.3},
  organization = {Bluegiga Technologies},
  title = {iWRAP 2.2.0 User Guide},
  url = {http://techforum.bluegiga.com/protectedstore/29142/8424/127/bluegiga_170/870a53f4351796f6ca9451366de37ca2/iWRAP_2.2.0_User_Guide.pdf},
  year = {2007},
  keywords = {2.2.0 Bluegiga Guide iWRAP Technologies User},
}

@manual{oik_chematic,
  edition = {1.0},
  organization = {Bluegiga Technologies},
  title = {WRAP THOR OIK, Version 1.0},
  url = {http://techforum.bluegiga.com/protectedstore/29051/8424/127/bluegiga_151/d8600a243a3773642b7b50d763da4200/OIK_schematics.pdf},
  year = {2005},
  keywords = {Installation Kit OIK OnBoard},
}

@manual{oik_chematic_arduino,
  organization = {Arduino users playground},
  title = {Programming the Arduino BT WT11 module},
  url = {http://www.arduino.cc/playground/Learning/BTWT11Interface},
  year = {2008},
}
